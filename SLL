class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class SLL(Node):
    def __init__(self):
        self.head = None

    def insertData(self, data):
        newNode = Node(data)
        if self.head is None:
            self.head = newNode
        else:
            temp = self.head
            while temp.next is not None:
                temp = temp.next

            temp.next = newNode

    def display(self):
        if self.head is None:
            print("No data Available")
        else:
            temp = self.head
            while temp is not None:
                print(temp.data,end=" ")
                temp = temp.next

    def insertAtBegin(self, data):
        newNode = Node(data)
        if self.head is None:
            self.head = newNode
        else:
            newNode.next = self.head
            self.head = newNode

    def deleteAtBegin(self):
        if self.head is None:
            print("List is Empty")
        else:
            self.head = self.head.next

    def deleteAtEnd(self):
        if self.head is None:
            print("List is Empty")
        else:
            temp = self.head
            while temp.next.next is not None:
                temp = temp.next

            temp.next = None

    def insertAtPos(self, data, pos):
        newNode = Node(data)
        if pos == 1:
            if self.head is None:
                self.head = newNode
            else:
                self.insertAtBegin(data)
        else:
            temp = self.head
            for _ in range(1, pos-1):
                temp = temp.next
                if temp is None:
                    print("Index out of range")
                    return

            newNode.next = temp.next
            temp.next = newNode


ob = SLL()
ob.insertData(10)
ob.insertData(20)
ob.insertData(34)
ob.insertData(43)
ob.insertData(55)
ob.display()
print("\n")
ob.insertAtPos(13, 3)
ob.display()
print("\n")
ob.insertAtBegin(9)
ob.display()
